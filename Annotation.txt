[@Component]

 @Controller는 @Component를 상속한다.
 
<context:component-scan base-package=""/>
: 태그를 사용해서 spring이 class(컴포넌트, 컨트롤러)를 검색할 package를 지정
  태그는 base-package에서 지정한 package에서 @Component가 적용 된 class를 검색해서 bean으로 자동 등록한다.
  <context:component-scan base-package="com.spring.annotationEx" />
  
  - simple maven project
   <context:annotation-config/>
  
  - MVC servlet-context
   <annotation-driven />
   
  # 따라서, XML 설정 파일이 다양한 bean정보를 추가하지 않더라도 된다.
  
  * 설정파일에서는 <context:annotation-config/>태그를 사용한다.
  
	@Component("service01")
	public class AbstractSvcImpl implements AbstractSvc{
	
		private String name = "01";
		
		@Override
		public String getClassName() {
			return "AbstractSvcImpl - " + name;
		}
	}

  설정파일에서 <bean> 태그로 작성을 한다면..
  <bean id="service01" class="com.spring.annotationEx.AbstractSvcImpl" /> 와 같은 방법

	@Component("service02")
	public class AbstractSvcImpl02 implements AbstractSvc{
		private String name = "02";
		
		@Override
		public String getClassName() {
			return "AnstractSvcImpl = " + name;
		}
	}

  설정파일에서 <bean> 태그로 작성을 한다면..
  <bean id="service02" class="com.spring.annotationEx.AbstractSvcImpl02" /> 와 같은 방법


[@Resource]
 java6 및 JEE5에 추가
 application에서 필요한 자원을 자동으로 연결할 때 사용
 spring 2.5부터 지원하는 annotation
 spring에서는 의존하는 bean 객체를 전달할 때 사용
 
 설정파일에서는 <context:annotation-config> 태그를 사용한다.
 또는,
 		<bean class="org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor"/>
 클래스를 빈으로 등록시켜 사용하는 방법이 있다.

